{"version":3,"sources":["webpack://identify-modified-package/./src/index.ts"],"names":["System","register","exports_1","context_1","_a","core","github","id","setters","core_1","github_1","execute","async","context","eventName","octokit","getOctokit","getInput","resp","rest","pulls","listFiles","Object","assign","repo","pull_number","payload","pull_request","number","moddedPackages","data","forEach","file","splitFName","filename","split","push","length","setOutput","error","setFailed"],"mappings":"AAAAA,OAAOC,SAAS,CAAC,gBAAiB,oBAAoB,SAAUC,EAAWC,GACvE,aACA,IAAIC,EAAIC,EAAMC,EAEd,OADmBH,GAAaA,EAAUI,GACnC,CACHC,QAAS,CACL,SAAUC,GACNJ,EAAOI,GAEX,SAAUC,GACNJ,EAASI,IAGjBC,QAASC,iBACL,IACI,MAAMC,EAAUP,EAAOO,QACvB,GAA0B,iBAAtBA,EAAQC,UACR,KAAM,qBAEV,MAAMC,EAAUT,EAAOU,WAAWX,EAAKY,SAAS,iBAC1CC,QAAaH,EAAQI,KAAKC,MAAMC,UAAUC,OAAOC,OAAOD,OAAOC,OAAO,GAAIV,EAAQW,MAAO,CAAEC,YAAqD,QAAvCrB,EAAKS,EAAQa,QAAQC,oBAAiC,IAAPvB,OAAgB,EAASA,EAAGwB,UAC1L,IAAIC,EAAiB,GAOrB,GANAX,EAAKY,KAAKC,SAASC,IACf,MAAMC,EAAaD,EAAKE,SAASC,MAAM,KACjB,SAAlBF,EAAW,IACXJ,EAAeO,KAAK,GAAGH,EAAW,MAAMA,EAAW,SAGvDJ,EAAeQ,OAAS,EACxB,KAAM,kCAEVhC,EAAKiC,UAAU,UAAWT,EAAe,IAE7C,MAAOU,GACHlC,EAAKmC,UAAUD","file":"index.js","sourcesContent":["System.register([\"@actions/core\", \"@actions/github\"], function (exports_1, context_1) {\n    \"use strict\";\n    var _a, core, github;\n    var __moduleName = context_1 && context_1.id;\n    return {\n        setters: [\n            function (core_1) {\n                core = core_1;\n            },\n            function (github_1) {\n                github = github_1;\n            }\n        ],\n        execute: async function () {\n            try {\n                const context = github.context;\n                if (context.eventName !== \"pull_request\") {\n                    throw \"Not a pull request\";\n                }\n                const octokit = github.getOctokit(core.getInput(\"github-token\"));\n                const resp = await octokit.rest.pulls.listFiles(Object.assign(Object.assign({}, context.repo), { pull_number: (_a = context.payload.pull_request) === null || _a === void 0 ? void 0 : _a.number }));\n                let moddedPackages = [];\n                resp.data.forEach((file) => {\n                    const splitFName = file.filename.split(\"/\");\n                    if (splitFName[0] === \"pkgs\") {\n                        moddedPackages.push(`${splitFName[0]}/${splitFName[1]}`);\n                    }\n                });\n                if (moddedPackages.length > 1) {\n                    throw \"More than one modified package.\";\n                }\n                core.setOutput(\"package\", moddedPackages[0]);\n            }\n            catch (error) {\n                core.setFailed(error);\n            }\n        }\n    };\n});\n"],"sourceRoot":""}